
import classes.DBO;
import java.io.File;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sam
 */
public class Backup extends javax.swing.JInternalFrame {

    /**
     * Creates new form Backup
     */
    public Backup() {
        initComponents();
          setVisible(true);
          pathtf.requestFocusInWindow();
          fileChooser.setVisible(false);
    }
DBO obj=new DBO();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pathtf = new javax.swing.JTextField();
        brwsbtn = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();
        jPanel2 = new javax.swing.JPanel();
        bckupbtn = new javax.swing.JButton();
        clsbtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Backup");

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Backup Storage Path");

        pathtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathtfActionPerformed(evt);
            }
        });

        brwsbtn.setText("Browse");
        brwsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brwsbtnActionPerformed(evt);
            }
        });

        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooser.setDialogTitle("Select the Path to Save Backup");
        fileChooser.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pathtf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(brwsbtn)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pathtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brwsbtn))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        bckupbtn.setText("Backup");
        bckupbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckupbtnActionPerformed(evt);
            }
        });

        clsbtn.setText("Close");
        clsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clsbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(bckupbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(clsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bckupbtn)
                    .addComponent(clsbtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void SaveActionPerformed() {
    int returnVal = fileChooser.showSaveDialog(this);
    if (returnVal == fileChooser.APPROVE_OPTION) {
        File file = fileChooser.getCurrentDirectory();
        //try {
       // JOptionPane.showMessageDialog(null, file.getPath());
             pathtf.setText(file.getPath());
            // } 
        /*catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Error in accessing file !","Error",JOptionPane.ERROR_MESSAGE);
              }*/
    } else {
       // JOptionPane.showMessageDialog(null,"File access cancelled by user !","Cancelled",JOptionPane.INFORMATION_MESSAGE);
      
    }
 }
    
    private void clsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clsbtnActionPerformed

         int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to close ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
        setVisible(false);
       }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_clsbtnActionPerformed

    private void bckupbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckupbtnActionPerformed

       String path= pathtf.getText();
        if(path.equals(""))
    {
        JOptionPane.showMessageDialog(null,"Enter the valid Path","Warning",JOptionPane.WARNING_MESSAGE);
    }
        else
        {
            try
            {
                
         int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to generate the backup ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
                String s = obj.backupDB(path);
            
            //if(s.equals("no"))
            {
                JOptionPane.showMessageDialog(null,"Backup Successfully generated at \n "+s,"Done",JOptionPane.INFORMATION_MESSAGE);
                pathtf.setText("");
            }
          /*  else
            {
                 
                 JOptionPane.showMessageDialog(null,"Error During Backup","Error",JOptionPane.ERROR_MESSAGE);
            }*/
       } 
       }
        catch(Exception e)
        {
        }
        }
    
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_bckupbtnActionPerformed

    private void pathtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathtfActionPerformed
      
       
       String path= pathtf.getText();
        if(path.equals(""))
    {
        JOptionPane.showMessageDialog(null,"Enter the valid Path","Warning",JOptionPane.WARNING_MESSAGE);
    }
        else
        {
            try
            {
                
         int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to generate the backup ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
                String s = obj.backupDB(path);
            
            //if(s.equals("no"))
            {
                JOptionPane.showMessageDialog(null,"Backup Successfully generated at \n "+s,"Done",JOptionPane.INFORMATION_MESSAGE);
                pathtf.setText("");
            }
          /*  else
            {
                 
                 JOptionPane.showMessageDialog(null,"Error During Backup","Error",JOptionPane.ERROR_MESSAGE);
            }*/
       } 
       }
        catch(Exception e)
        {
        }
        }
    
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_pathtfActionPerformed

    private void brwsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brwsbtnActionPerformed
        fileChooser.setVisible(true);
        SaveActionPerformed();
        // TODO add your handling code here:
    }//GEN-LAST:event_brwsbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bckupbtn;
    private javax.swing.JButton brwsbtn;
    private javax.swing.JButton clsbtn;
    private static javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField pathtf;
    // End of variables declaration//GEN-END:variables
}
