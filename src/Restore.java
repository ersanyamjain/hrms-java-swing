
import classes.DBO;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
  class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".accdb" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".accdb") || file.getAbsolutePath().endsWith(".mdb");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "HRMS Database Files (*.accdb,*.mdb)";
        }
    } 
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sam
 */
public class Restore extends javax.swing.JInternalFrame {

    /**
     * Creates new form Restore
     */
    public Restore() {
        initComponents();
        setVisible(true);
        fileChooser.setVisible(false);
         pathtf.requestFocusInWindow();
    }
DBO obj=new DBO();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pathtf = new javax.swing.JTextField();
        fileChooser = new javax.swing.JFileChooser();
        brwsbtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        rstrbtn = new javax.swing.JButton();
        clsbtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Restore");

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Backup File Path");

        pathtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathtfActionPerformed(evt);
            }
        });

        fileChooser.setDialogTitle("Select the Previously Generated Backup File");
        fileChooser.setFileFilter(new MyCustomFilter());
        fileChooser.setToolTipText("");

        brwsbtn.setText("Browse");
        brwsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brwsbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pathtf, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brwsbtn)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pathtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brwsbtn))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        rstrbtn.setText("Restore");
        rstrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstrbtnActionPerformed(evt);
            }
        });

        clsbtn.setText("Close");
        clsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clsbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(rstrbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rstrbtn)
                    .addComponent(clsbtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clsbtnActionPerformed

          int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to close ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
        setVisible(false);
       }
        // TODO add your handling code here:
    }//GEN-LAST:event_clsbtnActionPerformed

    private void rstrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstrbtnActionPerformed

        String path= pathtf.getText();

        if(path.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter the valid Path","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            try
            {
                 int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to restore the backup ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
                String s = obj.restoreDB(path);

                if(s.equals("yes"))
                {
                    JOptionPane.showMessageDialog(null,"Successfully Restored","Done",JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Error During Restore","Error",JOptionPane.ERROR_MESSAGE);
                }
                pathtf.setText("");
            }
            }
            catch(Exception e)
            {
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rstrbtnActionPerformed

    private void pathtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathtfActionPerformed

        String path= pathtf.getText();

        if(path.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter the valid Path","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            try
            {
                 int flag=   JOptionPane.showConfirmDialog(null,"Are you sure you want to restore the backup ?","Warning",JOptionPane.YES_NO_OPTION);
       if(flag==0)
       {
                String s = obj.restoreDB(path);

                if(s.equals("yes"))
                {
                    JOptionPane.showMessageDialog(null,"Successfully Restored","Done",JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Error During Restore","Error",JOptionPane.ERROR_MESSAGE);
                }
                pathtf.setText("");
            }
            }
            catch(Exception e)
            {
            }
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_pathtfActionPerformed

 private void OpenActionPerformed() {
    int returnVal = fileChooser.showOpenDialog(this);
    if (returnVal == fileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        //try {
             pathtf.setText(file.getPath());
            // } 
        /*catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"Error in accessing file !","Error",JOptionPane.ERROR_MESSAGE);
              }*/
    } else {
       // JOptionPane.showMessageDialog(null,"File access cancelled by user !","Cancelled",JOptionPane.INFORMATION_MESSAGE);
      
    }
 }
    private void brwsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brwsbtnActionPerformed
fileChooser.setVisible(true);
         OpenActionPerformed();
        // TODO add your handling code here:
    }//GEN-LAST:event_brwsbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brwsbtn;
    private javax.swing.JButton clsbtn;
    private static javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField pathtf;
    private javax.swing.JButton rstrbtn;
    // End of variables declaration//GEN-END:variables
}
